# -*- coding: utf-8 -*-
"""AICP EDA Week 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LA4iVu_pYTUqpovC4BAMS5ElMHJPQe_Z
"""

#Task 1

import numpy as np
import pandas as pd
import matplotlib as mlt
import plotly as pl
import seaborn as sns

file = pd.read_csv("/content/menu.csv")

file.head(1)

#Task 2

max_calories = file['Calories'].max()
max_fat = file['Total Fat'].max()
max_carbs = file['Carbohydrates'].max()
max_fiber = file['Dietary Fiber'].max()
max_sugar = file['Sugars'].max()
max_protein = file['Protein'].max()
max_vitA = file['Vitamin A (% Daily Value)'].max()
max_vitC = file['Vitamin C (% Daily Value)'].max()
max_cal = file['Calcium (% Daily Value)'].max()
max_iron = file['Iron (% Daily Value)'].max()


print(f"Max Calories: {max_calories}")
print(f"Max Fat: {max_fat}")
print(f"Max Carbohydrates: {max_carbs}")
print(f"Max Fiber: {max_fiber}")
print(f"Max Sugar: {max_sugar}")
print(f"Max Protein: {max_protein}")
print(f"Max Vitamin A: {max_vitA}")
print(f"Max Vitamin C: {max_vitC}")
print(f"Max Calcium: {max_cal}")
print(f"Max Iron: {max_iron}")

#Task 3

file.corr()

file.columns

#Task 4

import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(x='Calories', y='Category', data=file)

plt.title('Boxplot of Category vs Calories')
plt.xlabel('Calories')
plt.ylabel('Category')
plt.show()

maxCalories = file[file['Calories'] == file.Calories.max()]
maxFat = file[file['Total Fat'] == file['Total Fat'].max()]
maxCarbs = file[file['Carbohydrates'] == file.Carbohydrates.max()]
maxFiber = file[file['Dietary Fiber'] == file['Dietary Fiber'].max()]
maxSugar = file[file['Sugars'] == file.Sugars.max()]
maxProtein = file[file['Protein'] == file.Protein.max()]
maxVitA = file[file['Vitamin A (% Daily Value)'] == file['Vitamin A (% Daily Value)'].max()]
maxVitC = file[file['Vitamin C (% Daily Value)'] == file['Vitamin C (% Daily Value)'].max()]
maxCal = file[file['Calcium (% Daily Value)'] == file['Calcium (% Daily Value)'].max()]
maxIron = file[file['Iron (% Daily Value)'] == file['Iron (% Daily Value)'].max()]

print(f"Calories: {maxCalories['Category'].values} - {maxCalories['Calories'].values}")
print(f"Fat: {maxFat['Category'].values} - {maxFat['Total Fat'].values}")
print(f"Carbohydrates: {maxCarbs['Category'].values} - {maxCarbs['Carbohydrates'].values}")
print(f"Dietary Fiber: {maxFiber['Category'].values} - {maxFiber['Dietary Fiber'].values}")
print(f"Sugars: {maxSugar['Category'].values} - {maxSugar['Sugars'].values}")
print(f"Protein: {maxProtein['Category'].values} - {maxProtein['Protein'].values}")
print(f"Vitamin A: {maxVitA['Category'].values} - {maxVitA['Vitamin A (% Daily Value)'].values}")
print(f"Vitamin C {maxVitC['Category'].values} - {maxVitC['Vitamin C (% Daily Value)'].values}")
print(f"Calcium: {maxCal['Category'].values} - {maxCal['Calcium (% Daily Value)'].values}")
print(f"Iron: {maxIron['Category'].values} - {maxIron['Iron (% Daily Value)'].values}")

#Task 6

sns.stripplot(x="Category", y = 'Calories' ,data=file)
plt.ylabel('Calories')
plt.show()

sns.stripplot(x="Category", y = 'Total Fat' ,data=file)
plt.ylabel('Total Fat')
plt.show()

sns.stripplot(x="Category", y = 'Carbohydrates' ,data=file)
plt.ylabel('Carbohydrates')
plt.show()

sns.stripplot(x="Category", y = 'Dietary Fiber' ,data=file)
plt.ylabel('Dietary Fiber')
plt.show()

sns.stripplot(x="Category", y = 'Sugars' ,data=file)
plt.ylabel('Sugars')
plt.show()

sns.stripplot(x="Category", y = 'Protein' ,data=file)
plt.ylabel('Protein')
plt.show()

sns.stripplot(x="Category", y = 'Vitamin A (% Daily Value)' ,data=file)
plt.ylabel('Vitamin A')
plt.show()

sns.stripplot(x="Category", y = 'Vitamin C (% Daily Value)' ,data=file)
plt.ylabel('Vitamin C')
plt.show()

sns.stripplot(x="Category", y = 'Calcium (% Daily Value)' ,data=file)
plt.ylabel('Calcium')
plt.show()

sns.stripplot(x="Category", y = 'Iron (% Daily Value)' ,data=file)
plt.ylabel('Iron')
plt.show()

#Task 7

print(file['Category'].unique())

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 10))
cat1 = file[file['Category'] == 'Breakfast']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Chicken & Fish']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Salads']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Snacks & Sides']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Desserts']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Beverages']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

# @title

cat1 = file[file['Category'] == 'Coffee & Tea']
plt.figure(figsize=(10, 19))
plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()

cat1 = file[file['Category'] == 'Smoothies & Shakes']

plt.barh(cat1['Item'], cat1['Calories'])

plt.xlabel('Calories')
plt.ylabel('Items')
plt.title('Horizontal Bar Chart')

plt.show()



